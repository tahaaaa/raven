raven {
  env = "dev"
  host = "0.0.0.0"
  port = 9911
  sendgrid {
    api-key = ""
  }
  max-retries = 5 //this multiplied by 5000 shouldnt be bigger than endpoint timeout, otherwise http requests will timeout before all retries are done
  certified-pool = 10 //number of parallel tasks in certified service
  priority-pool = 30 //number of parallel tasks in priority service
  actor-timeout = 10000 //milliseconds
  endpoint-timeout = 30000 //milliseconds. Divided by 2 needs to be higher than actor-timeout

  database = {
    connectionTestQuery = "select 1;"
    dataSourceClass = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
    properties = {
      serverName = "localhost"
      portNumber = "3306"
      databaseName = "ELEUSIS"
      user = "raven"
      password = ""
    }
  }

}

akka {

  loggers = ["org.slf4j.impl.Log4jLoggerAdapter"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"


  actor {
    priority-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 4
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 4.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 20
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }

    deployment {
      /SMTPService {
        router = round-robin-pool
        nr-of-instances = 5 //max number of parallel calls to sendgrid SMTP API
      }
    }
  }
}