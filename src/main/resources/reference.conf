hermes {
  env = "dev"
  host = "0.0.0.0"
  port = 9911
  timeout = 10000
  database = {
    connectionTestQuery = "select 1;"
    dataSourceClass = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
    properties = {
      serverName = "localhost"
      portNumber = "3306"
      databaseName = "ELEUSIS"
      user = "hermes"
      password = ""
    }
  }
}

akka {

  # when tracing with atmos use this logger instead
  #loggers = ["com.typesafe.atmos.trace.Slf4jTraceContextLogger"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"


  actor {
    priority-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 4
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 4.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 20
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }
    # provider = "akka.remote.RemoteActorRefProvider"
    //    deployment {
    //      /priority-service {
    //
    //      }
    //    }
  }

  //  remote {
  //    enabled-transports = ["akka.remote.netty.tcp"]
  //    netty.tcp {
  //      hostname = "127.0.0.1"
  //      port = 28000
  //    }
  //  }
}