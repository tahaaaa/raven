raven {
  prd = false //if set to false, only recipients matching 'restrict-to' regex will be sent
  restrict-to = "^(acacia|paulr|mwilson|tessa|badri|scott|ibai|javierc|billma|jonathan|tommy|lauren|alexis|calvin|robert|pqg|oscar|ernest|jaoo|amac|sara|leigh|ari|cesar|davidhoatson|lawrence|marinas|mleaney|sridhar|tiffany|lhayes|puneet|awroblicky|laura|carolin|julie|brian|gian|craig|amy|christianf|mike|mads|andrew|manas|msander|venkat|swartz|nan|lakshmanan|stan|adam|andresm|joey|roland|fran|crdlc|cjc|delia|chetan|jaideep|charley|dmun|hashir|jpujol|jwade|liz|rpc|steve|utkarsh|brg|eanicich|aaron|ardy|jchang|amelia|lee|crdic|salva|freya|donal|yue|taha|kyle|geetha|bob|tejas|phung|mgraham|karl|madhav|oludemilade|guillermo|fmr|cristina|eric|charles|hannah|trash)(\\+(\\w[-.]*)*)?@tokbox.com$"
  host = "0.0.0.0"
  port = 9911
  sendgrid {
    api-key = ""
  }
  max-retries = 3
  deferrer = 2 //seconds to wait until next try in case one of ther requests fails
  certified-pool = 1 //parallelization certified service
  priority-pool = 10 //parallelization of priority service
  actor-timeout = 4s //timeout applied to couriers talking to dao/email provider
  endpoint-timeout = 30s //max-retries * deferrer * actor-timeout should be smaller than this

  database = {
    connectionTestQuery = "select 1;"
    dataSourceClass = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
    properties = {
      serverName = "localhost"
      portNumber = "3306"
      databaseName = "raven"
      user = "root"
      password = "root"
    }
  }
}

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"


  actor {
    priority-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 4
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 4.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 20
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }

    deployment {
      /SMTPService {
        router = round-robin-pool
        nr-of-instances = 5 //max number of parallel calls to sendgrid SMTP API
      }
    }
  }
}
